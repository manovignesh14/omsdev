schemaVersion: 2.3.0
metadata:
  name: oms-dev-
attributes:
  persistVolumes: 'false'
projects:
  - name: oms-extension
    git:
      remotes:
        origin: https://github.com/priyajithc/oms-extension-sample.git
components:
  - name: java-plugin
    plugin:
      id: redhat/java/latest
      preferences:
        java.server.launchMode: Standard

  - name: oms-extenstion
    container:
      image: quay.io/eclipse/che-java11-gradle:7.21.1
      mountSources: true
      memoryLimit: 1024Mi
      env:
        - name: GRADLE_USER_HOME
          value: /home/gradle/.gradle
        - name: JAVA_OPTS
          value: >-
            -XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
            -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
            -XX:AdaptiveSizePolicyWeight=90
            -Dsun.zip.disableMemoryMapping=true -Xms20m
            -Djava.security.egd=file:/dev/./urandom
        - name: JAVA_TOOL_OPTIONS
          value: >-
            -XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
            -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
            -XX:AdaptiveSizePolicyWeight=90
            -Dsun.zip.disableMemoryMapping=true -Xms20m
            -Djava.security.egd=file:/dev/./urandom
        - name: HOME
          value: /home/gradle
      volumeMounts:
        - name: gradle
          path: /home/gradle/.gradle

  - name: oms-runtime
    container:
      image: manovignesh/oms-base
      mountSources: true
      memoryLimit: 4096Mi
      endpoints:
        - name: Store_Dev_Server
          targetPort: 4500
          attributes:
            path: /

  - name: oms-appserver
    container:
      image: manovignesh/oms-base
      mountSources: true
      memoryLimit: 3072Mi
      endpoints:
        - name: Sterling_Application_Manager
          targetPort: 9080
          attributes:
            path: /smcfs
        - name: Sterling_Business_Center
          targetPort: 9080
          attributes:
            path: /sbc
        - name: Sterling_Call_Center
          targetPort: 9080
          attributes:
            path: /isccs
        - name: Sterling_Store
          targetPort: 9080
          attributes:
            path: /wsc
        - name: Sterling_Store2
          targetPort: 9080
          attributes:
            path: /isf
        - name: API_Tester
          targetPort: 9080
          attributes:
            path: /smcfs/yfshttpapi/ibmapitester.jsp

  - name: gradle
    volume:
      size: 1Gi

commands:
  - id: build-java-extensions
    exec:
      component: oms-extenstion
      commandLine: gradle build
      workingDir: ${CHE_PROJECTS_ROOT}/oms-extension-sample
      group:
        kind: build

  - id: build-resource-jar
    exec:
      component: oms-runtime
      commandLine: ./setupfiles.sh && ./deployer.sh -t resourcejar
      workingDir: ${OMS_RUNTIME}/bin
      group:
        kind: build

  - id: build-entity-jar
    exec:
      component: oms-runtime
      commandLine: ./setupfiles.sh && ./dbverify.sh && ./deployer.sh -t entitydeployer
      workingDir: ${OMS_RUNTIME}/bin
      group:
        kind: build

  - id: build-ear
    exec:
      component: oms-runtime
      commandLine: >-
        read -p 'WAR Files [smcfs,sbc,sma]: ' warFiles; warFiles=${warFiles:-'smcfs,sbc,sma'};
        read -p 'Dev Mode [false]: ' devMode; devMode=${devMode:-'false'};
        read -p 'Additional Build Arguments: ' addnArgs;
        cd bin && ./setupfiles.sh && ./deployer.sh -t resourcejargen &&
        ./buildear.sh -Ddevmode=$devMode -Dappserver=websphere -Dapitester=true
        -Dwebsphere-profile=liberty -Dwarfiles=$warFiles -Dearfile=smcfs.ear
        -Dnowebservice=true -Dnoejb=true $addnArgs
      workingDir: ${OMS_RUNTIME}
      group:
        kind: build

  - id: start-agent-server
    exec:
      component: oms-runtime
      commandLine: >-
        read -p 'Server Name: ' name; read -p 'JVM Options: ' jvmOptions;
        echo "Starting server $name $jvmOptions"
      workingDir: ${OMS_RUNTIME}
      group:
        kind: run

  - id: stop-agent-server
    exec:
      component: oms-runtime
      commandLine: >-
        read -p 'Server Name: ' name; echo "Stopping server $name"
      workingDir: ${OMS_RUNTIME}
      group:
        kind: run

  - id: deploy-ear
    exec:
      component: oms-appserver
      commandLine: >-
        rm -rf /config/dropins/*.ear && cp runtime/external_deployments/*.ear /config/dropins/
      workingDir: ${CHE_PROJECTS_ROOT}
      group:
        kind: deploy

  - id: start-app-server
    exec:
      component: oms-appserver
      commandLine: /opt/ibm/wlp/bin/server run defaultServer
      workingDir: ${CHE_PROJECTS_ROOT}
      group:
        kind: run

  - id: stop-app-server
    exec:
      component: oms-appserver
      commandLine: /opt/ibm/wlp/bin/server stop defaultServer
      workingDir: ${CHE_PROJECTS_ROOT}
      group:
        kind: run

  - id: launch-store-dev
    exec:
      component: oms-runtime
      commandLine: ng serve --host 0.0.0.0 --disable-host-check
      workingDir: ${CHE_PROJECTS_ROOT}/store-dev
      group:
        kind: run
